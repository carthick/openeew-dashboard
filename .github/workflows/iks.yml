# This workflow will build a docker container, publish it to IBM Container Registry, and deploy it to an existing IKS cluster
# If a Pull Request is merged into the master branch this will deploy to staging.openeew.com
# If a release is created on the master branch, this action will deploy to dashboard.openeew.com
name: Build and Deploy to IKS

on:
  push: # Execute on every push to the master branch. Merging a pull request counts as a push.
    branches:
      - master
  release: # Execute when a release is created on the master branch
    types:
      - created

jobs:
  build-push-deploy-job:
    runs-on: ubuntu-latest
    name: A job to download and log into ibmcloud cli
    steps:
      - uses: actions/checkout@v2

      - name: Set general enviroment variables
        env:
          VCAP_LOCAL: ${{ secrets.VCAP_LOCAL }}
          REACT_APP_MAPBOX_ACCESS_TOKEN: ${{ secrets.REACT_APP_MAPBOX_ACCESS_TOKEN }}
        run: |
          echo "DEPLOYMENT_NAME=openeew-dashboard" >> $GITHUB_ENV        
          echo "$VCAP_LOCAL" >> ./web/api/vcap-local.json
          echo REACT_APP_MAPBOX_ACCESS_TOKEN=$REACT_APP_MAPBOX_ACCESS_TOKEN >> ./web/client/.env.local

      # If this action is triggered by a release, we will deploy to the production site
      - name: Set environment variables for a release
        if: ${{ github.event_name == 'release' && github.event.action == 'created' }}
        run: |
          echo "DEPLOYMENT_NAME=openeew-dashboard-production" >> $GITHUB_ENV

      # Turnstyle ensures that this job only runs one at a time in this repository
      - name: Turnstyle
        uses: softprops/turnstyle@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: call-for-code/build-push-deploy@v1
        with:
          cloud-api-key: ${{ secrets.IBM_CLOUD_API_KEY }}
          cloud-resource-group: OpenEEW-Infra
          cloud-region: us-south
          deployment-name: ${ env.DEPLOYMENT_NAME }
          github-sha: ${{ github.sha }}
          icr-namespace: ${{ secrets.ICR_NAMESPACE }}
          image-name: dashboard-gha
          k8s-cluster-name: ${{ secrets.K8S_CLUSTER_NAME }}
          k8s-cluster-namespace: ${{ secrets.K8S_CLUSTER_NAMESPACE }}
          registry-hostname: us.icr.io
          working-directory: "web/"
